package Hashtable
import NoWurst

public function hashtable.hasBoolean( integer parentKey, integer childKey ) returns boolean
	return HaveSavedBoolean( this, parentKey, childKey )

public function hashtable.hasHandle( integer parentKey, integer childKey ) returns boolean
	return HaveSavedHandle( this, parentKey, childKey )

public function hashtable.hasInt( int parentKey, int childKey ) returns boolean
	return HaveSavedInteger( this, parentKey, childKey )

public function hashtable.hasReal( integer parentKey, integer childKey ) returns boolean
	return HaveSavedReal( this, parentKey, childKey )

public function hashtable.hasString( integer parentKey, integer childKey ) returns boolean
	return HaveSavedString( this, parentKey, childKey )

public function hashtable.loadAbilityHandle( integer parentKey, integer childKey ) returns ability
	return LoadAbilityHandle( this, parentKey, childKey )

public function hashtable.loadBoolean( integer parentKey, integer childKey ) returns boolean
	return LoadBoolean( this, parentKey, childKey )

public function hashtable.loadBooleanExprHandle( integer parentKey, integer childKey ) returns boolexpr
	return LoadBooleanExprHandle( this, parentKey, childKey )

public function hashtable.loadButtonHandle( integer parentKey, integer childKey ) returns button
	return LoadButtonHandle( this, parentKey, childKey )

public function hashtable.loadDefeatConditionHandle( integer parentKey, integer childKey ) returns defeatcondition
	return LoadDefeatConditionHandle( this, parentKey, childKey )

public function hashtable.loadDestructableHandle( integer parentKey, integer childKey ) returns destructable
	return LoadDestructableHandle( this, parentKey, childKey )

public function hashtable.loadDialogHandle( integer parentKey, integer childKey ) returns dialog
	return LoadDialogHandle( this, parentKey, childKey )
	
public function hashtable.loadEffectHandle( integer parentKey, integer childKey ) returns effect
	return LoadEffectHandle( this, parentKey, childKey )

public function hashtable.loadForceHandle( integer parentKey, integer childKey ) returns force
	return LoadForceHandle( this, parentKey, childKey )

public function hashtable.loadGroupHandle( integer parentKey, integer childKey ) returns group
	return LoadGroupHandle( this, parentKey, childKey )

public function hashtable.loadInt( int parentKey, int childKey ) returns int
	return LoadInteger( this, parentKey, childKey )

public function hashtable.loadItemPoolHandle( integer parentKey, integer childKey ) returns itempool
	return LoadItemPoolHandle( this, parentKey, childKey )
	
public function hashtable.loadItemHandle( integer parentKey, integer childKey ) returns item
	return LoadItemHandle( this, parentKey, childKey )

public function hashtable.loadLeaderboardHandle( integer parentKey, integer childKey ) returns leaderboard
	return LoadLeaderboardHandle( this, parentKey, childKey )

public function hashtable.loadFogStateHandle( integer parentKey, integer childKey ) returns fogstate
	return LoadFogStateHandle( this, parentKey, childKey )

public function hashtable.loadLightningHandle( integer parentKey, integer childKey ) returns lightning
	return LoadLightningHandle( this, parentKey, childKey )

public function hashtable.loadLocationHandle( integer parentKey, integer childKey ) returns location
	return LoadLocationHandle( this, parentKey, childKey )

public function hashtable.loadImageHandle( integer parentKey, integer childKey ) returns image
	return LoadImageHandle( this, parentKey, childKey )

public function hashtable.loadMultiboardHandle( integer parentKey, integer childKey ) returns multiboard
	return LoadMultiboardHandle( this, parentKey, childKey )

public function hashtable.loadFogModifierHandle( integer parentKey, integer childKey ) returns fogmodifier
	return LoadFogModifierHandle( this, parentKey, childKey )

public function hashtable.loadPlayerHandle( integer parentKey, integer childKey ) returns player
	return LoadPlayerHandle( this, parentKey, childKey )

public function hashtable.loadQuestHandle( integer parentKey, integer childKey ) returns quest
	return LoadQuestHandle( this, parentKey, childKey )

public function hashtable.loadQuestItemHandle( integer parentKey, integer childKey ) returns questitem
	return LoadQuestItemHandle( this, parentKey, childKey )

public function hashtable.loadReal( integer parentKey, integer childKey ) returns real
	return LoadReal( this, parentKey, childKey )

public function hashtable.loadRectHandle( integer parentKey, integer childKey ) returns rect
	return LoadRectHandle( this, parentKey, childKey )

public function hashtable.loadRegionHandle( integer parentKey, integer childKey ) returns region
	return LoadRegionHandle( this, parentKey, childKey )
	
public function hashtable.loadSoundHandle( integer parentKey, integer childKey ) returns sound
	return LoadSoundHandle( this, parentKey, childKey )

public function hashtable.loadString( integer parentKey, integer childKey ) returns string
	return LoadStr( this, parentKey, childKey )

public function hashtable.loadTextTagHandle( integer parentKey, integer childKey ) returns texttag
	return LoadTextTagHandle( this, parentKey, childKey )
	
public function hashtable.loadTimerDialogHandle( integer parentKey, integer childKey ) returns timerdialog
	return LoadTimerDialogHandle( this, parentKey, childKey )

public function hashtable.loadTimerHandle( integer parentKey, integer childKey ) returns timer
	return LoadTimerHandle( this, parentKey, childKey )

public function hashtable.loadTrackableHandle( integer parentKey, integer childKey ) returns trackable
	return LoadTrackableHandle( this, parentKey, childKey )
	
public function hashtable.loadTriggerActionHandle( integer parentKey, integer childKey ) returns triggeraction
	return LoadTriggerActionHandle( this, parentKey, childKey )

public function hashtable.loadTriggerConditionHandle( integer parentKey, integer childKey ) returns triggercondition
	return LoadTriggerConditionHandle( this, parentKey, childKey )
	
public function hashtable.loadTriggerEventHandle( integer parentKey, integer childKey ) returns event
	return LoadTriggerEventHandle( this, parentKey, childKey )
	
public function hashtable.loadTriggerHandle( integer parentKey, integer childKey ) returns trigger
	return LoadTriggerHandle( this, parentKey, childKey )

public function hashtable.loadUbersplatHandle( integer parentKey, integer childKey ) returns ubersplat
	return LoadUbersplatHandle( this, parentKey, childKey )
	
public function hashtable.loadUnitHandle( integer parentKey, integer childKey ) returns unit
	return LoadUnitHandle( this, parentKey, childKey )

public function hashtable.loadUnitPoolHandle( integer parentKey, integer childKey ) returns unitpool
	return LoadUnitPoolHandle( this, parentKey, childKey )
	
public function hashtable.loadWidgetHandle( integer parentKey, integer childKey ) returns widget
	return LoadWidgetHandle( this, parentKey, childKey )

public function hashtable.saveAbilityHandle( integer parentKey, integer childKey, ability value )
	SaveAbilityHandle( this, parentKey, childKey, value )

public function hashtable.saveBoolean( integer parentKey, integer childKey, boolean value )
	SaveBoolean( this, parentKey, childKey, value )

public function hashtable.saveBooleanExprHandle( integer parentKey, integer childKey, boolexpr value )
	SaveBooleanExprHandle( this, parentKey, childKey, value )

public function hashtable.saveButtonHandle( integer parentKey, integer childKey, button value )
	SaveButtonHandle( this, parentKey, childKey, value )

public function hashtable.saveDefeatConditionHandle( integer parentKey, integer childKey, defeatcondition value )
	SaveDefeatConditionHandle( this, parentKey, childKey, value )

public function hashtable.saveDestructableHandle( integer parentKey, integer childKey, destructable value )
	SaveDestructableHandle( this, parentKey, childKey, value )

public function hashtable.saveDialogHandle( integer parentKey, integer childKey, dialog value )
	SaveDialogHandle( this, parentKey, childKey, value )
	
public function hashtable.saveEffectHandle( integer parentKey, integer childKey, effect value )
	SaveEffectHandle( this, parentKey, childKey, value )

public function hashtable.saveFogModifierHandle( integer parentKey, integer childKey, fogmodifier value )
	SaveFogModifierHandle( this, parentKey, childKey, value )

public function hashtable.saveFogStateHandle( integer parentKey, integer childKey, fogstate value )
	SaveFogStateHandle( this, parentKey, childKey, value )

public function hashtable.saveForceHandle( integer parentKey, integer childKey, force value )
	SaveForceHandle( this, parentKey, childKey, value )

public function hashtable.saveGroupHandle( integer parentKey, integer childKey, group value )
	SaveGroupHandle( this, parentKey, childKey, value )

public function hashtable.saveImageHandle( integer parentKey, integer childKey, image value )
	SaveImageHandle( this, parentKey, childKey, value )

public function hashtable.saveInt( int parentKey, int childKey, int value )
	SaveInteger( this, parentKey, childKey, value )

public function hashtable.saveItemHandle( integer parentKey, integer childKey, item value )
	SaveItemHandle( this, parentKey, childKey, value )

public function hashtable.saveItemPoolHandle( integer parentKey, integer childKey, itempool value )
	SaveItemPoolHandle( this, parentKey, childKey, value )

public function hashtable.saveLeaderboardHandle( integer parentKey, integer childKey, leaderboard value )
	SaveLeaderboardHandle( this, parentKey, childKey, value )

public function hashtable.saveLightningHandle( integer parentKey, integer childKey, lightning value )
	SaveLightningHandle( this, parentKey, childKey, value )

public function hashtable.saveLocationHandle( integer parentKey, integer childKey, location value )
	SaveLocationHandle( this, parentKey, childKey, value )

public function hashtable.saveMultiboardHandle( integer parentKey, integer childKey, multiboard value )
	SaveMultiboardHandle( this, parentKey, childKey, value )

public function hashtable.savePlayerHandle( integer parentKey, integer childKey, player value )
	SavePlayerHandle( this, parentKey, childKey, value )

public function hashtable.saveQuestHandle( integer parentKey, integer childKey, quest value )
	SaveQuestHandle( this, parentKey, childKey, value )

public function hashtable.saveQuestItemHandle( integer parentKey, integer childKey, questitem value )
	SaveQuestItemHandle( this, parentKey, childKey, value )

public function hashtable.saveReal( integer parentKey, integer childKey, real value )
	SaveReal( this, parentKey, childKey, value )

public function hashtable.saveRectHandle( integer parentKey, integer childKey, rect value )
	SaveRectHandle( this, parentKey, childKey, value )

public function hashtable.saveRegionHandle( integer parentKey, integer childKey, region value )
	SaveRegionHandle( this, parentKey, childKey, value )
	
public function hashtable.saveSoundHandle( integer parentKey, integer childKey, sound value )
	SaveSoundHandle( this, parentKey, childKey, value )

public function hashtable.saveString( integer parentKey, integer childKey, string value )
	SaveStr( this, parentKey, childKey, value )

public function hashtable.saveTextTagHandle( integer parentKey, integer childKey, texttag value )
	SaveTextTagHandle( this, parentKey, childKey, value )
	
public function hashtable.saveTimerDialogHandle( integer parentKey, integer childKey, timerdialog value )
	SaveTimerDialogHandle( this, parentKey, childKey, value )

public function hashtable.saveTimerHandle( integer parentKey, integer childKey, timer value )
	SaveTimerHandle( this, parentKey, childKey, value )

public function hashtable.saveTrackableHandle( integer parentKey, integer childKey, trackable value )
	SaveTrackableHandle( this, parentKey, childKey, value )
	
public function hashtable.saveTriggerActionHandle( integer parentKey, integer childKey, triggeraction value )
	SaveTriggerActionHandle( this, parentKey, childKey, value )

public function hashtable.saveTriggerConditionHandle( integer parentKey, integer childKey, triggercondition value )
	SaveTriggerConditionHandle( this, parentKey, childKey, value )
	
public function hashtable.saveTriggerEventHandle( integer parentKey, integer childKey, event value )
	SaveTriggerEventHandle( this, parentKey, childKey, value )
	
public function hashtable.saveTriggerHandle( integer parentKey, integer childKey, trigger value )
	SaveTriggerHandle( this, parentKey, childKey, value )

public function hashtable.saveUbersplatHandle( integer parentKey, integer childKey, ubersplat value )
	SaveUbersplatHandle( this, parentKey, childKey, value )
	
public function hashtable.saveUnitHandle( integer parentKey, integer childKey, unit value )
	SaveUnitHandle( this, parentKey, childKey, value )

public function hashtable.saveUnitPoolHandle( integer parentKey, integer childKey, unitpool value )
	SaveUnitPoolHandle( this, parentKey, childKey, value )
	
public function hashtable.saveWidgetHandle( integer parentKey, integer childKey, widget value )
	SaveWidgetHandle( this, parentKey, childKey, value )
	
public function hashtable.removeBoolean(integer parentKey, integer childKey)
	RemoveSavedBoolean(this, parentKey, childKey)
	
public function hashtable.removeHandle(integer parentKey, integer childKey)
	RemoveSavedHandle(this, parentKey, childKey)
	
public function hashtable.removeInt(integer parentKey, integer childKey)
	RemoveSavedInteger(this, parentKey, childKey)
	
public function hashtable.removeReal(integer parentKey, integer childKey)
	RemoveSavedReal(this, parentKey, childKey)
	
public function hashtable.removeString(integer parentKey, integer childKey)
	RemoveSavedString(this, parentKey, childKey)

public function hashtable.flushChild(int parentKey)
	FlushChildHashtable(this, parentKey)
	
public function hashtable.flush()
	FlushParentHashtable(this)
