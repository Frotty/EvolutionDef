package Projectile
import public Entity
import Angle
import CollisionDetection

public class Projectile extends Entity
	// Angles
	protected angle xyAngle
	protected angle zAngle
	
	private boolean timed = false
	private boolean ranged = false
	
	// Moving Speed
	private real speed = 0.
	private real dist = 0.
	private real maxDist
	private real time = 0.
	private real maxTime
	
	boolean fixedFlyHeight = false
	
	construct( vec3 pos, player owner, angle xyAngle, string fxpath )
		super(pos, new Fx(pos, xyAngle, fxpath))
		setXYAngle(xyAngle)
		this.owner = owner
		
	function setFixedFlyHeight(real z)
		fixedFlyHeight = true
		fx.setZ(z)
				
	function setRanged(real maxDistance)
		this.maxDist = maxDistance
		ranged = true
		
	function setTimed(real lifespan)
		this.maxTime = lifespan
		timed = true
	
	function setSpeed(real speed)
		this.speed = speed * ANIMATION_PERIOD
		setVel(vec3(xyAngle.cos()*this.speed, xyAngle.sin()*this.speed, 0.))
		active = true
		
	function getSpeed() returns real
		return speed / ANIMATION_PERIOD
		
	function setXYAngle(angle xyA)
		this.xyAngle = xyA
		fx.setXYAngle(xyA)
		
	function setZAngle(angle zA)
		this.xyAngle = zA
		fx.setZAngle(zA)
		
		
	override function update()
		addVelToPos()
		if fixedFlyHeight
			setToPos2()
		else
			if sleeping
				setToPos3()
			else
				super.update()
		if timed
			time += ANIMATION_PERIOD
			if time >= maxTime
				destroy this
		if ranged
			dist += speed
			if dist > maxDist
				destroy this

