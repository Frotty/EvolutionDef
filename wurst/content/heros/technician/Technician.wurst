package Technician
import Hero
import Xplosives
import Molotov
import Napalm
import ClosureTimers
import XBurn
import SoundHelper
import ObjectIds
import InfernalWheel

int TECHNICIAN_ID

public class Technician extends Hero
	private vec2 napalm_Last = vec2(0,0)
	
	construct(vec3 pos, player owner )
		super(pos, owner, TECHNICIAN_ID)
		ModifyHeroSkillPoints(actor, bj_MODIFYMETHOD_SET, 1)
		SelectHeroSkill(actor, XBURN_SPELL_ID)
		ModifyHeroSkillPoints(actor, bj_MODIFYMETHOD_SET, 1)

	override function onCast(int spellId, int lvl)
	
	override function onUnitCast(int spellId, unit target, int lvl)
		switch spellId
			case NAPALM_SPELL_ID
				napalm_Last = getPos2()
				new NapalmDroplet(napalm_Last, this, lvl)
				DROP_SOUND.playSimulateUnit(actor)
				doPeriodicallyTimed(ANIMATION_PERIOD, getNapalmDropDuration(lvl) * 1., (CallbackCounted cb) -> begin
					if getPos2().distToVecSquared(napalm_Last) > 40*40
						napalm_Last = getPos2()
						new NapalmDroplet(napalm_Last, this, lvl)
				end)		
	override function onPointCast(int spellId, vec2 target, int lvl)
		switch spellId
			case EXPLOSIVES_SPELL_ID
				createXplosive(target, this, lvl)
			case MOLOTOV_SPELL_ID
				new Molotov(getPos3() + vec3(0,0,50), target, this, lvl)
			case INFERNAL_WHEEL_ID
				new InfernalWheel(getPos2(), target, this)
			
	
public function init_Technician(boolean compiletime)
	TECHNICIAN_ID = HERO_ID_GEN.next()
	init_InfernalWheel(compiletime)
	init_Xplosives(compiletime)
	init_Molotov(compiletime)
	init_XBurn(compiletime)
	init_Napalm(compiletime)
	if compiletime
		// Generate def if compieltime

		
		/*let adef = new AbilityDefinitionWarStompcreep(DUMBACKOFF_SPELL_ID)
		adef..setCooldown(1, 0)..setManaCost(1, 0) //Missing presets ehre 
		..setLevels(1)..setAreaofEffect(1, 300) // Done
		*/
		let preset = new HeroPreset(TECHNICIAN_ID, 'Ntin', "Technician")
		preset..addProperName("Robi")
			..addHeroAbility(EXPLOSIVES_SPELL_ID)
			..addHeroAbility(NAPALM_SPELL_ID)
			..addHeroAbility(MOLOTOV_SPELL_ID)
			..addHeroAbility(XBURN_SPELL_ID)
			..addHeroAbility(INFERNAL_WHEEL_ID)
			..setAgilityPerLevel(1.5)..setStartingAgility(15)
			..setIntelligencePerLevel(2.9)..setStartingIntelligence(24)
			..setStartingStrength(17)..setStrengthPerLevel(2.5)
		// Build at the end
			..buildHero()