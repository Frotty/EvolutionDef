package XBurn
import BuffHandler
import Hero
import HashMap
import MapStuff

public BuffDef XBURN_BUFF_DEF
public int XBURN_SPELL_ID

constant XBURN_NAME = "Xburn"
constant XBURN_HOTKEY = "D"
constant XBURN_MAXLEVEL = 4

constant XBURN_DURATION = 4.

function getXburnMaxStacks(int lvl) returns int
	return 2 + 2 * lvl
	
function getXburnDamage(int lvl) returns real
	return 2. + lvl
	
HashMap<unit, int> burnMap = new HashMap<unit, int>()

public function unit.hasXBurn() returns boolean
	return burnMap.get(this) > 0
	
public function unit.refreshXBurn()
	this.refreshBuff(XBURN_BUFF_DEF, XBURN_DURATION)

public function unit.addXBurn(Hero caster, int stacks)
	let lvl = caster.actor.getAbilityLevel(XBURN_SPELL_ID)
	let tt = createTTEx(this.getPos().withZ(100), "", 10, colorA(255,122,122,255))
	burnMap.put(this, burnMap.get(this) + 1)
	this.applyBuff(XBURN_BUFF_DEF, stacks, getXburnMaxStacks(lvl), XBURN_DURATION, caster, (BuffContainer buffContainer) -> begin
		buffContainer.caster.actor.damageTarget(buffContainer.buffed, getXburnDamage(lvl) * buffContainer.stacks)
		tt..setText(buffContainer.stacks.toString(), 10)..setPos(this.getPos().withZ(100))
		if buffContainer.isLast()
			tt.destr()
			burnMap.put(this, burnMap.get(this) - 1)
	end)

public function init_XBurn(boolean c)
	XBURN_BUFF_DEF = new BuffDef("Xburn", "This unit gets damaged depending on stacks", "BTNevil")
	XBURN_BUFF_DEF.stacking = true
	XBURN_BUFF_DEF.buffArt = "Abilities\\Spells\\Human\\FlameStrike\\FlameStrikeEmbers.mdl"
	
	XBURN_SPELL_ID = ABIL_ID_GEN.next()
	if c
		XBURN_BUFF_DEF.generate()
		let def = new AbilityDefinitionBashcreep(XBURN_SPELL_ID)
		def..setName("Xburn")..presetButtonPosNormal(1, 1)..presetIcon("PASevil")
		
		new AbilityTooltipGenerator(XBURN_NAME, XBURN_HOTKEY, Targettype.PASSIVE, XBURN_MAXLEVEL, "Spells from the technician can inflict an XBurn.\nXBurn instances stack.\nXDoes damage over time.")
		..addProperty("Max Stacks:", (int lvl) -> getXburnMaxStacks(lvl).toString())
		..addProperty("Damage:", (int lvl) -> getXburnDamage(lvl).toString())
		..addProperty("Duration:", XBURN_DURATION.toString())
		..applyToDef(def)
	
